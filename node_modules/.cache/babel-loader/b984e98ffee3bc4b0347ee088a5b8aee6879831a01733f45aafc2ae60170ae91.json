{"ast":null,"code":"import Bottleneck from 'bottleneck/light';\nimport { RequestError } from '@octokit/request-error';\n\n// @ts-ignore\nasync function errorRequest(state, octokit, error, options) {\n  if (!error.request || !error.request.request) {\n    // address https://github.com/octokit/plugin-retry.js/issues/8\n    throw error;\n  }\n  // retry all >= 400 && not doNotRetry\n  if (error.status >= 400 && !state.doNotRetry.includes(error.status)) {\n    const retries = options.request.retries != null ? options.request.retries : state.retries;\n    const retryAfter = Math.pow((options.request.retryCount || 0) + 1, 2);\n    throw octokit.retry.retryRequest(error, retries, retryAfter);\n  }\n  // Maybe eventually there will be more cases here\n  throw error;\n}\n\n// @ts-nocheck\nasync function wrapRequest(state, octokit, request, options) {\n  const limiter = new Bottleneck();\n  limiter.on(\"failed\", function (error, info) {\n    const maxRetries = ~~error.request.request.retries;\n    const after = ~~error.request.request.retryAfter;\n    options.request.retryCount = info.retryCount + 1;\n    if (maxRetries > info.retryCount) {\n      // Returning a number instructs the limiter to retry\n      // the request after that number of milliseconds have passed\n      return after * state.retryAfterBaseValue;\n    }\n  });\n  return limiter.schedule(requestWithGraphqlErrorHandling.bind(null, state, octokit, request), options);\n}\nasync function requestWithGraphqlErrorHandling(state, octokit, request, options) {\n  const response = await request(request, options);\n  if (response.data && response.data.errors && /Something went wrong while executing your query/.test(response.data.errors[0].message)) {\n    // simulate 500 request error for retry handling\n    const error = new RequestError(response.data.errors[0].message, 500, {\n      request: options,\n      response\n    });\n    return errorRequest(state, octokit, error, options);\n  }\n  return response;\n}\nconst VERSION = \"4.1.3\";\nfunction retry(octokit, octokitOptions) {\n  const state = Object.assign({\n    enabled: true,\n    retryAfterBaseValue: 1000,\n    doNotRetry: [400, 401, 403, 404, 422],\n    retries: 3\n  }, octokitOptions.retry);\n  if (state.enabled) {\n    octokit.hook.error(\"request\", errorRequest.bind(null, state, octokit));\n    octokit.hook.wrap(\"request\", wrapRequest.bind(null, state, octokit));\n  }\n  return {\n    retry: {\n      retryRequest: (error, retries, retryAfter) => {\n        error.request.request = Object.assign({}, error.request.request, {\n          retries: retries,\n          retryAfter: retryAfter\n        });\n        return error;\n      }\n    }\n  };\n}\nretry.VERSION = VERSION;\nexport { VERSION, retry };","map":{"version":3,"names":["errorRequest","state","octokit","error","options","request","status","doNotRetry","includes","retries","retryAfter","Math","pow","retryCount","retry","retryRequest","wrapRequest","limiter","Bottleneck","on","info","maxRetries","after","retryAfterBaseValue","schedule","requestWithGraphqlErrorHandling","bind","response","data","errors","test","message","RequestError","VERSION","octokitOptions","Object","assign","enabled","hook","wrap"],"sources":["/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/plugin-retry/dist-src/error-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/plugin-retry/dist-src/wrap-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/plugin-retry/dist-src/index.js"],"sourcesContent":["// @ts-ignore\nexport async function errorRequest(state, octokit, error, options) {\n    if (!error.request || !error.request.request) {\n        // address https://github.com/octokit/plugin-retry.js/issues/8\n        throw error;\n    }\n    // retry all >= 400 && not doNotRetry\n    if (error.status >= 400 && !state.doNotRetry.includes(error.status)) {\n        const retries = options.request.retries != null ? options.request.retries : state.retries;\n        const retryAfter = Math.pow((options.request.retryCount || 0) + 1, 2);\n        throw octokit.retry.retryRequest(error, retries, retryAfter);\n    }\n    // Maybe eventually there will be more cases here\n    throw error;\n}\n","// @ts-nocheck\nimport Bottleneck from \"bottleneck/light\";\nimport { RequestError } from \"@octokit/request-error\";\nimport { errorRequest } from \"./error-request\";\nexport async function wrapRequest(state, octokit, request, options) {\n    const limiter = new Bottleneck();\n    limiter.on(\"failed\", function (error, info) {\n        const maxRetries = ~~error.request.request.retries;\n        const after = ~~error.request.request.retryAfter;\n        options.request.retryCount = info.retryCount + 1;\n        if (maxRetries > info.retryCount) {\n            // Returning a number instructs the limiter to retry\n            // the request after that number of milliseconds have passed\n            return after * state.retryAfterBaseValue;\n        }\n    });\n    return limiter.schedule(requestWithGraphqlErrorHandling.bind(null, state, octokit, request), options);\n}\nasync function requestWithGraphqlErrorHandling(state, octokit, request, options) {\n    const response = await request(request, options);\n    if (response.data &&\n        response.data.errors &&\n        /Something went wrong while executing your query/.test(response.data.errors[0].message)) {\n        // simulate 500 request error for retry handling\n        const error = new RequestError(response.data.errors[0].message, 500, {\n            request: options,\n            response,\n        });\n        return errorRequest(state, octokit, error, options);\n    }\n    return response;\n}\n","import { errorRequest } from \"./error-request\";\nimport { wrapRequest } from \"./wrap-request\";\nexport const VERSION = \"4.1.3\";\nexport function retry(octokit, octokitOptions) {\n    const state = Object.assign({\n        enabled: true,\n        retryAfterBaseValue: 1000,\n        doNotRetry: [400, 401, 403, 404, 422],\n        retries: 3,\n    }, octokitOptions.retry);\n    if (state.enabled) {\n        octokit.hook.error(\"request\", errorRequest.bind(null, state, octokit));\n        octokit.hook.wrap(\"request\", wrapRequest.bind(null, state, octokit));\n    }\n    return {\n        retry: {\n            retryRequest: (error, retries, retryAfter) => {\n                error.request.request = Object.assign({}, error.request.request, {\n                    retries: retries,\n                    retryAfter: retryAfter,\n                });\n                return error;\n            },\n        },\n    };\n}\nretry.VERSION = VERSION;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}