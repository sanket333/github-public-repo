{"ast":null,"code":"async function auth(reason) {\n  return {\n    type: \"unauthenticated\",\n    reason\n  };\n}\nfunction isRateLimitError(error) {\n  if (error.status !== 403) {\n    return false;\n  }\n  /* istanbul ignore if */\n  if (!error.response) {\n    return false;\n  }\n  return error.response.headers[\"x-ratelimit-remaining\"] === \"0\";\n}\nconst REGEX_ABUSE_LIMIT_MESSAGE = /\\babuse\\b/i;\nfunction isAbuseLimitError(error) {\n  if (error.status !== 403) {\n    return false;\n  }\n  return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);\n}\nasync function hook(reason, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  return request(endpoint).catch(error => {\n    if (error.status === 404) {\n      error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n    if (isRateLimitError(error)) {\n      error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n    if (isAbuseLimitError(error)) {\n      error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n    if (error.status === 401) {\n      error.message = `Unauthorized. \"${endpoint.method} ${endpoint.url}\" failed most likely due to lack of authentication. Reason: ${reason}`;\n      throw error;\n    }\n    if (error.status >= 400 && error.status < 500) {\n      error.message = error.message.replace(/\\.?$/, `. May be caused by lack of authentication (${reason}).`);\n    }\n    throw error;\n  });\n}\nconst createUnauthenticatedAuth = function createUnauthenticatedAuth(options) {\n  if (!options || !options.reason) {\n    throw new Error(\"[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth\");\n  }\n  return Object.assign(auth.bind(null, options.reason), {\n    hook: hook.bind(null, options.reason)\n  });\n};\nexport { createUnauthenticatedAuth };","map":{"version":3,"names":["auth","reason","type","isRateLimitError","error","status","response","headers","REGEX_ABUSE_LIMIT_MESSAGE","isAbuseLimitError","test","message","hook","request","route","parameters","endpoint","merge","catch","method","url","replace","createUnauthenticatedAuth","options","Error","Object","assign","bind"],"sources":["/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/auth-unauthenticated/dist-src/auth.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/auth-unauthenticated/dist-src/is-rate-limit-error.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/auth-unauthenticated/dist-src/is-abuse-limit-error.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/auth-unauthenticated/dist-src/hook.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/auth-unauthenticated/dist-src/index.js"],"sourcesContent":["export async function auth(reason) {\n    return {\n        type: \"unauthenticated\",\n        reason,\n    };\n}\n","export function isRateLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    /* istanbul ignore if */\n    if (!error.response) {\n        return false;\n    }\n    return error.response.headers[\"x-ratelimit-remaining\"] === \"0\";\n}\n","const REGEX_ABUSE_LIMIT_MESSAGE = /\\babuse\\b/i;\nexport function isAbuseLimitError(error) {\n    if (error.status !== 403) {\n        return false;\n    }\n    return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);\n}\n","import { isRateLimitError } from \"./is-rate-limit-error\";\nimport { isAbuseLimitError } from \"./is-abuse-limit-error\";\nexport async function hook(reason, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    return request(endpoint).catch((error) => {\n        if (error.status === 404) {\n            error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isRateLimitError(error)) {\n            error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (isAbuseLimitError(error)) {\n            error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status === 401) {\n            error.message = `Unauthorized. \"${endpoint.method} ${endpoint.url}\" failed most likely due to lack of authentication. Reason: ${reason}`;\n            throw error;\n        }\n        if (error.status >= 400 && error.status < 500) {\n            error.message = error.message.replace(/\\.?$/, `. May be caused by lack of authentication (${reason}).`);\n        }\n        throw error;\n    });\n}\n","import { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport const createUnauthenticatedAuth = function createUnauthenticatedAuth(options) {\n    if (!options || !options.reason) {\n        throw new Error(\"[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth\");\n    }\n    return Object.assign(auth.bind(null, options.reason), {\n        hook: hook.bind(null, options.reason),\n    });\n};\n"],"mappings":"AAAO,eAAeA,IAAIA,CAACC,MAAM,EAAE;EAC/B,OAAO;IACHC,IAAI,EAAE,iBAAiB;IACvBD;EACR,CAAK;AACL;ACLO,SAASE,gBAAgBA,CAACC,KAAK,EAAE;EACpC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;IACtB,OAAO,KAAK;EACpB;EACA;EACI,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;IACjB,OAAO,KAAK;EACpB;EACI,OAAOF,KAAK,CAACE,QAAQ,CAACC,OAAO,CAAC,uBAAuB,CAAC,KAAK,GAAG;AAClE;ACTA,MAAMC,yBAAyB,GAAG,YAAY;AAC9C,SAAgBC,iBAAiBA,CAACL,KAAK,EAAE;EACrC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;IACtB,OAAO,KAAK;EACpB;EACI,OAAOG,yBAAyB,CAACE,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC;AACxD;ACJO,eAAeC,IAAIA,CAACX,MAAM,EAAEY,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAE;EAC3D,MAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAQ,CAACC,KAAK,CAACH,KAAK,EAAEC,UAAU,CAAC;EAC1D,OAAOF,OAAO,CAACG,QAAQ,CAAC,CAACE,KAAK,CAAEd,KAAK,IAAK;IACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACtBD,KAAK,CAACO,OAAO,GAAI,4DAA2DV,MAAO,EAAC;MACpF,MAAMG,KAAK;IACvB;IACQ,IAAID,gBAAgB,CAACC,KAAK,CAAC,EAAE;MACzBA,KAAK,CAACO,OAAO,GAAI,qFAAoFV,MAAO,EAAC;MAC7G,MAAMG,KAAK;IACvB;IACQ,IAAIK,iBAAiB,CAACL,KAAK,CAAC,EAAE;MAC1BA,KAAK,CAACO,OAAO,GAAI,6GAA4GV,MAAO,EAAC;MACrI,MAAMG,KAAK;IACvB;IACQ,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACtBD,KAAK,CAACO,OAAO,GAAI,kBAAiBK,QAAQ,CAACG,MAAO,IAAGH,QAAQ,CAACI,GAAI,+DAA8DnB,MAAO,EAAC;MACxI,MAAMG,KAAK;IACvB;IACQ,IAAIA,KAAK,CAACC,MAAM,IAAI,GAAG,IAAID,KAAK,CAACC,MAAM,GAAG,GAAG,EAAE;MAC3CD,KAAK,CAACO,OAAO,GAAGP,KAAK,CAACO,OAAO,CAACU,OAAO,CAAC,MAAM,EAAG,8CAA6CpB,MAAO,IAAG,CAAC;IACnH;IACQ,MAAMG,KAAK;EACnB,CAAK,CAAC;AACN;ACxBY,MAACkB,yBAAyB,GAAG,SAASA,yBAAyBA,CAACC,OAAO,EAAE;EACjF,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACtB,MAAM,EAAE;IAC7B,MAAM,IAAIuB,KAAK,CAAC,+EAA+E,CAAC;EACxG;EACI,OAAOC,MAAM,CAACC,MAAM,CAAC1B,IAAI,CAAC2B,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAACtB,MAAM,CAAC,EAAE;IAClDW,IAAI,EAAEA,IAAI,CAACe,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAACtB,MAAM;EAC5C,CAAK,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}