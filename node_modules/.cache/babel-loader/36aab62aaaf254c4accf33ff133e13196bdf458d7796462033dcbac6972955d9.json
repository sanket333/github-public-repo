{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar OAuthAppAuth = require('@octokit/auth-oauth-app');\nvar core = require('@octokit/core');\nvar universalUserAgent = require('universal-user-agent');\nvar authOauthUser = require('@octokit/auth-oauth-user');\nvar OAuthMethods = require('@octokit/oauth-methods');\nvar authUnauthenticated = require('@octokit/auth-unauthenticated');\nvar fromEntries = _interopDefault(require('fromentries'));\nconst VERSION = \"4.2.0\";\nfunction addEventHandler(state, eventName, eventHandler) {\n  if (Array.isArray(eventName)) {\n    for (const singleEventName of eventName) {\n      addEventHandler(state, singleEventName, eventHandler);\n    }\n    return;\n  }\n  if (!state.eventHandlers[eventName]) {\n    state.eventHandlers[eventName] = [];\n  }\n  state.eventHandlers[eventName].push(eventHandler);\n}\nconst OAuthAppOctokit = core.Octokit.defaults({\n  userAgent: `octokit-oauth-app.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n});\nasync function emitEvent(state, context) {\n  const {\n    name,\n    action\n  } = context;\n  if (state.eventHandlers[`${name}.${action}`]) {\n    for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {\n      await eventHandler(context);\n    }\n  }\n  if (state.eventHandlers[name]) {\n    for (const eventHandler of state.eventHandlers[name]) {\n      await eventHandler(context);\n    }\n  }\n}\nasync function getUserOctokitWithState(state, options) {\n  return state.octokit.auth({\n    type: \"oauth-user\",\n    ...options,\n    async factory(options) {\n      const octokit = new state.Octokit({\n        authStrategy: authOauthUser.createOAuthUserAuth,\n        auth: options\n      });\n      const authentication = await octokit.auth({\n        type: \"get\"\n      });\n      await emitEvent(state, {\n        name: \"token\",\n        action: \"created\",\n        token: authentication.token,\n        scopes: authentication.scopes,\n        authentication,\n        octokit\n      });\n      return octokit;\n    }\n  });\n}\nfunction getWebFlowAuthorizationUrlWithState(state, options) {\n  let allowSignup;\n  if (options.allowSignup === undefined && state.allowSignup === undefined) {\n    allowSignup = true;\n  } else if (options.allowSignup === undefined && state.allowSignup !== undefined) {\n    allowSignup = state.allowSignup;\n  } else if (state.allowSignup === undefined && options.allowSignup !== undefined) {\n    allowSignup = options.allowSignup;\n  } else {\n    allowSignup = options.allowSignup || state.allowSignup;\n  }\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    request: state.octokit.request,\n    ...options,\n    allowSignup,\n    redirectUrl: options.redirectUrl || state.redirectUrl,\n    scopes: options.scopes || state.defaultScopes\n  };\n  return OAuthMethods.getWebFlowAuthorizationUrl({\n    clientType: state.clientType,\n    ...optionsWithDefaults\n  });\n}\nasync function createTokenWithState(state, options) {\n  const authentication = await state.octokit.auth({\n    type: \"oauth-user\",\n    ...options\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"created\",\n    token: authentication.token,\n    scopes: authentication.scopes,\n    authentication,\n    octokit: new state.Octokit({\n      authStrategy: OAuthAppAuth.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: authentication.token,\n        scopes: authentication.scopes,\n        refreshToken: authentication.refreshToken,\n        expiresAt: authentication.expiresAt,\n        refreshTokenExpiresAt: authentication.refreshTokenExpiresAt\n      }\n    })\n  });\n  return {\n    authentication\n  };\n}\nasync function checkTokenWithState(state, options) {\n  const result = await OAuthMethods.checkToken({\n    // @ts-expect-error not worth the extra code to appease TS\n    clientType: state.clientType,\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  });\n  Object.assign(result.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  return result;\n}\nasync function resetTokenWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n  if (state.clientType === \"oauth-app\") {\n    const response = await OAuthMethods.resetToken({\n      clientType: \"oauth-app\",\n      ...optionsWithDefaults\n    });\n    const authentication = Object.assign(response.authentication, {\n      type: \"token\",\n      tokenType: \"oauth\"\n    });\n    await emitEvent(state, {\n      name: \"token\",\n      action: \"reset\",\n      token: response.authentication.token,\n      scopes: response.authentication.scopes || undefined,\n      authentication: authentication,\n      octokit: new state.Octokit({\n        authStrategy: authOauthUser.createOAuthUserAuth,\n        auth: {\n          clientType: state.clientType,\n          clientId: state.clientId,\n          clientSecret: state.clientSecret,\n          token: response.authentication.token,\n          scopes: response.authentication.scopes\n        }\n      })\n    });\n    return {\n      ...response,\n      authentication\n    };\n  }\n  const response = await OAuthMethods.resetToken({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"reset\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return {\n    ...response,\n    authentication\n  };\n}\nasync function refreshTokenWithState(state, options) {\n  if (state.clientType === \"oauth-app\") {\n    throw new Error(\"[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps\");\n  }\n  const response = await OAuthMethods.refreshToken({\n    clientType: \"github-app\",\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    refreshToken: options.refreshToken\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"refreshed\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return {\n    ...response,\n    authentication\n  };\n}\nasync function scopeTokenWithState(state, options) {\n  if (state.clientType === \"oauth-app\") {\n    throw new Error(\"[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps\");\n  }\n  const response = await OAuthMethods.scopeToken({\n    clientType: \"github-app\",\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  });\n  const authentication = Object.assign(response.authentication, {\n    type: \"token\",\n    tokenType: \"oauth\"\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"scoped\",\n    token: response.authentication.token,\n    authentication: authentication,\n    octokit: new state.Octokit({\n      authStrategy: authOauthUser.createOAuthUserAuth,\n      auth: {\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: response.authentication.token\n      }\n    })\n  });\n  return {\n    ...response,\n    authentication\n  };\n}\nasync function deleteTokenWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n  const response = state.clientType === \"oauth-app\" ? await OAuthMethods.deleteToken({\n    clientType: \"oauth-app\",\n    ...optionsWithDefaults\n  }) :\n  // istanbul ignore next\n  await OAuthMethods.deleteToken({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`\n      }\n    })\n  });\n  return response;\n}\nasync function deleteAuthorizationWithState(state, options) {\n  const optionsWithDefaults = {\n    clientId: state.clientId,\n    clientSecret: state.clientSecret,\n    request: state.octokit.request,\n    ...options\n  };\n  const response = state.clientType === \"oauth-app\" ? await OAuthMethods.deleteAuthorization({\n    clientType: \"oauth-app\",\n    ...optionsWithDefaults\n  }) :\n  // istanbul ignore next\n  await OAuthMethods.deleteAuthorization({\n    clientType: \"github-app\",\n    ...optionsWithDefaults\n  });\n  await emitEvent(state, {\n    name: \"token\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`\n      }\n    })\n  });\n  await emitEvent(state, {\n    name: \"authorization\",\n    action: \"deleted\",\n    token: options.token,\n    octokit: new state.Octokit({\n      authStrategy: authUnauthenticated.createUnauthenticatedAuth,\n      auth: {\n        reason: `Handling \"authorization.deleted\" event. The access for the app has been revoked.`\n      }\n    })\n  });\n  return response;\n}\n\n// @ts-ignore - requires esModuleInterop flag\nasync function handleRequest(app, _ref, request) {\n  let {\n    pathPrefix = \"/api/github/oauth\"\n  } = _ref;\n  if (request.method === \"OPTIONS\") {\n    return {\n      status: 200,\n      headers: {\n        \"access-control-allow-origin\": \"*\",\n        \"access-control-allow-methods\": \"*\",\n        \"access-control-allow-headers\": \"Content-Type, User-Agent, Authorization\"\n      }\n    };\n  }\n  // request.url may include ?query parameters which we don't want for `route`\n  // hence the workaround using new URL()\n  const {\n    pathname\n  } = new URL(request.url, \"http://localhost\");\n  const route = [request.method, pathname].join(\" \");\n  const routes = {\n    getLogin: `GET ${pathPrefix}/login`,\n    getCallback: `GET ${pathPrefix}/callback`,\n    createToken: `POST ${pathPrefix}/token`,\n    getToken: `GET ${pathPrefix}/token`,\n    patchToken: `PATCH ${pathPrefix}/token`,\n    patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,\n    scopeToken: `POST ${pathPrefix}/token/scoped`,\n    deleteToken: `DELETE ${pathPrefix}/token`,\n    deleteGrant: `DELETE ${pathPrefix}/grant`\n  };\n  // handle unknown routes\n  if (!Object.values(routes).includes(route)) {\n    return null;\n  }\n  let json;\n  try {\n    const text = await request.text();\n    json = text ? JSON.parse(text) : {};\n  } catch (error) {\n    return {\n      status: 400,\n      headers: {\n        \"content-type\": \"application/json\",\n        \"access-control-allow-origin\": \"*\"\n      },\n      text: JSON.stringify({\n        error: \"[@octokit/oauth-app] request error\"\n      })\n    };\n  }\n  const {\n    searchParams\n  } = new URL(request.url, \"http://localhost\");\n  const query = fromEntries(searchParams);\n  const headers = request.headers;\n  try {\n    var _headers$authorizatio6;\n    if (route === routes.getLogin) {\n      const {\n        url\n      } = app.getWebFlowAuthorizationUrl({\n        state: query.state,\n        scopes: query.scopes ? query.scopes.split(\",\") : undefined,\n        allowSignup: query.allowSignup ? query.allowSignup === \"true\" : undefined,\n        redirectUrl: query.redirectUrl\n      });\n      return {\n        status: 302,\n        headers: {\n          location: url\n        }\n      };\n    }\n    if (route === routes.getCallback) {\n      if (query.error) {\n        throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);\n      }\n      if (!query.code) {\n        throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n      }\n      const {\n        authentication: {\n          token\n        }\n      } = await app.createToken({\n        code: query.code\n      });\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"text/html\"\n        },\n        text: `<h1>Token created successfully</h1>\n    \n<p>Your token is: <strong>${token}</strong>. Copy it now as it cannot be shown again.</p>`\n      };\n    }\n    if (route === routes.createToken) {\n      const {\n        code,\n        redirectUrl\n      } = json;\n      if (!code) {\n        throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n      }\n      const result = await app.createToken({\n        code,\n        redirectUrl\n      });\n      // @ts-ignore\n      delete result.authentication.clientSecret;\n      return {\n        status: 201,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n    if (route === routes.getToken) {\n      var _headers$authorizatio;\n      const token = (_headers$authorizatio = headers.authorization) === null || _headers$authorizatio === void 0 ? void 0 : _headers$authorizatio.substr(\"token \".length);\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n      const result = await app.checkToken({\n        token\n      });\n      // @ts-ignore\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n    if (route === routes.patchToken) {\n      var _headers$authorizatio2;\n      const token = (_headers$authorizatio2 = headers.authorization) === null || _headers$authorizatio2 === void 0 ? void 0 : _headers$authorizatio2.substr(\"token \".length);\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n      const result = await app.resetToken({\n        token\n      });\n      // @ts-ignore\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n    if (route === routes.patchRefreshToken) {\n      var _headers$authorizatio3;\n      const token = (_headers$authorizatio3 = headers.authorization) === null || _headers$authorizatio3 === void 0 ? void 0 : _headers$authorizatio3.substr(\"token \".length);\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n      const {\n        refreshToken\n      } = json;\n      if (!refreshToken) {\n        throw new Error(\"[@octokit/oauth-app] refreshToken must be sent in request body\");\n      }\n      const result = await app.refreshToken({\n        refreshToken\n      });\n      // @ts-ignore\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n    if (route === routes.scopeToken) {\n      var _headers$authorizatio4;\n      const token = (_headers$authorizatio4 = headers.authorization) === null || _headers$authorizatio4 === void 0 ? void 0 : _headers$authorizatio4.substr(\"token \".length);\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n      const result = await app.scopeToken({\n        token,\n        ...json\n      });\n      // @ts-ignore\n      delete result.authentication.clientSecret;\n      return {\n        status: 200,\n        headers: {\n          \"content-type\": \"application/json\",\n          \"access-control-allow-origin\": \"*\"\n        },\n        text: JSON.stringify(result)\n      };\n    }\n    if (route === routes.deleteToken) {\n      var _headers$authorizatio5;\n      const token = (_headers$authorizatio5 = headers.authorization) === null || _headers$authorizatio5 === void 0 ? void 0 : _headers$authorizatio5.substr(\"token \".length);\n      if (!token) {\n        throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n      }\n      await app.deleteToken({\n        token\n      });\n      return {\n        status: 204,\n        headers: {\n          \"access-control-allow-origin\": \"*\"\n        }\n      };\n    }\n    // route === routes.deleteGrant\n    const token = (_headers$authorizatio6 = headers.authorization) === null || _headers$authorizatio6 === void 0 ? void 0 : _headers$authorizatio6.substr(\"token \".length);\n    if (!token) {\n      throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n    }\n    await app.deleteAuthorization({\n      token\n    });\n    return {\n      status: 204,\n      headers: {\n        \"access-control-allow-origin\": \"*\"\n      }\n    };\n  } catch (error) {\n    return {\n      status: 400,\n      headers: {\n        \"content-type\": \"application/json\",\n        \"access-control-allow-origin\": \"*\"\n      },\n      text: JSON.stringify({\n        error: error.message\n      })\n    };\n  }\n}\nfunction parseRequest(request) {\n  const {\n    method,\n    url,\n    headers\n  } = request;\n  async function text() {\n    const text = await new Promise((resolve, reject) => {\n      let bodyChunks = [];\n      request.on(\"error\", reject).on(\"data\", chunk => bodyChunks.push(chunk)).on(\"end\", () => resolve(Buffer.concat(bodyChunks).toString()));\n    });\n    return text;\n  }\n  return {\n    method,\n    url,\n    headers,\n    text\n  };\n}\nfunction sendResponse(octokitResponse, response) {\n  response.writeHead(octokitResponse.status, octokitResponse.headers);\n  response.end(octokitResponse.text);\n}\nfunction onUnhandledRequestDefault(request) {\n  return {\n    status: 404,\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    text: JSON.stringify({\n      error: `Unknown route: ${request.method} ${request.url}`\n    })\n  };\n}\nfunction onUnhandledRequestDefaultNode(request, response) {\n  const octokitRequest = parseRequest(request);\n  const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n  sendResponse(octokitResponse, response);\n}\nfunction createNodeMiddleware(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (onUnhandledRequest) {\n    app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n  }\n  onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultNode);\n  return async function (request, response, next) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = await handleRequest(app, {\n      pathPrefix\n    }, octokitRequest);\n    if (octokitResponse) {\n      sendResponse(octokitResponse, response);\n    } else if (typeof next === \"function\") {\n      next();\n    } else {\n      onUnhandledRequest(request, response);\n    }\n  };\n}\nfunction parseRequest$1(request) {\n  // @ts-ignore Worker environment supports fromEntries/entries.\n  const headers = Object.fromEntries(request.headers.entries());\n  return {\n    method: request.method,\n    url: request.url,\n    headers,\n    text: () => request.text()\n  };\n}\nfunction sendResponse$1(octokitResponse) {\n  return new Response(octokitResponse.text, {\n    status: octokitResponse.status,\n    headers: octokitResponse.headers\n  });\n}\nasync function onUnhandledRequestDefaultWebWorker(request) {\n  const octokitRequest = parseRequest$1(request);\n  const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n  return sendResponse$1(octokitResponse);\n}\nfunction createWebWorkerHandler(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (onUnhandledRequest) {\n    app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n  }\n  onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultWebWorker);\n  return async function (request) {\n    const octokitRequest = parseRequest$1(request);\n    const octokitResponse = await handleRequest(app, {\n      pathPrefix\n    }, octokitRequest);\n    return octokitResponse ? sendResponse$1(octokitResponse) : await onUnhandledRequest(request);\n  };\n}\n/** @deprecated */\nfunction createCloudflareHandler() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  args[0].octokit.log.warn(\"[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead\");\n  return createWebWorkerHandler(...args);\n}\nfunction parseRequest$2(request) {\n  const {\n    method\n  } = request.requestContext.http;\n  let url = request.rawPath;\n  const {\n    stage\n  } = request.requestContext;\n  if (url.startsWith(\"/\" + stage)) url = url.substring(stage.length + 1);\n  if (request.rawQueryString) url += \"?\" + request.rawQueryString;\n  const headers = request.headers;\n  const text = async () => request.body || \"\";\n  return {\n    method,\n    url,\n    headers,\n    text\n  };\n}\nfunction sendResponse$2(octokitResponse) {\n  return {\n    statusCode: octokitResponse.status,\n    headers: octokitResponse.headers,\n    body: octokitResponse.text\n  };\n}\nasync function onUnhandledRequestDefaultAWSAPIGatewayV2(event) {\n  const request = parseRequest$2(event);\n  const response = onUnhandledRequestDefault(request);\n  return sendResponse$2(response);\n}\nfunction createAWSLambdaAPIGatewayV2Handler(app) {\n  let {\n    pathPrefix,\n    onUnhandledRequest\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (onUnhandledRequest) {\n    app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n  }\n  onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2);\n  return async function (event) {\n    const request = parseRequest$2(event);\n    const response = await handleRequest(app, {\n      pathPrefix\n    }, request);\n    return response ? sendResponse$2(response) : onUnhandledRequest(event);\n  };\n}\nclass OAuthApp {\n  static defaults(defaults) {\n    const OAuthAppWithDefaults = class extends this {\n      constructor() {\n        super({\n          ...defaults,\n          ...(arguments.length <= 0 ? undefined : arguments[0])\n        });\n      }\n    };\n    return OAuthAppWithDefaults;\n  }\n  constructor(options) {\n    const Octokit = options.Octokit || OAuthAppOctokit;\n    this.type = options.clientType || \"oauth-app\";\n    const octokit = new Octokit({\n      authStrategy: OAuthAppAuth.createOAuthAppAuth,\n      auth: {\n        clientType: this.type,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret\n      }\n    });\n    const state = {\n      clientType: this.type,\n      clientId: options.clientId,\n      clientSecret: options.clientSecret,\n      // @ts-expect-error defaultScopes not permitted for GitHub Apps\n      defaultScopes: options.defaultScopes || [],\n      allowSignup: options.allowSignup,\n      baseUrl: options.baseUrl,\n      redirectUrl: options.redirectUrl,\n      log: options.log,\n      Octokit,\n      octokit,\n      eventHandlers: {}\n    };\n    this.on = addEventHandler.bind(null, state);\n    // @ts-expect-error TODO: figure this out\n    this.octokit = octokit;\n    this.getUserOctokit = getUserOctokitWithState.bind(null, state);\n    this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);\n    this.createToken = createTokenWithState.bind(null, state);\n    this.checkToken = checkTokenWithState.bind(null, state);\n    this.resetToken = resetTokenWithState.bind(null, state);\n    this.refreshToken = refreshTokenWithState.bind(null, state);\n    this.scopeToken = scopeTokenWithState.bind(null, state);\n    this.deleteToken = deleteTokenWithState.bind(null, state);\n    this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);\n  }\n}\nOAuthApp.VERSION = VERSION;\nexports.OAuthApp = OAuthApp;\nexports.createAWSLambdaAPIGatewayV2Handler = createAWSLambdaAPIGatewayV2Handler;\nexports.createCloudflareHandler = createCloudflareHandler;\nexports.createNodeMiddleware = createNodeMiddleware;\nexports.createWebWorkerHandler = createWebWorkerHandler;\nexports.handleRequest = handleRequest;","map":{"version":3,"names":["VERSION","addEventHandler","state","eventName","eventHandler","Array","isArray","singleEventName","eventHandlers","push","OAuthAppOctokit","core","Octokit","defaults","userAgent","universalUserAgent","getUserAgent","emitEvent","context","name","action","getUserOctokitWithState","options","octokit","auth","type","factory","authStrategy","authOauthUser","createOAuthUserAuth","authentication","token","scopes","getWebFlowAuthorizationUrlWithState","allowSignup","undefined","optionsWithDefaults","clientId","request","redirectUrl","defaultScopes","OAuthMethods","getWebFlowAuthorizationUrl","clientType","createTokenWithState","OAuthAppAuth","clientSecret","refreshToken","expiresAt","refreshTokenExpiresAt","checkTokenWithState","result","checkToken","Object","assign","tokenType","resetTokenWithState","response","resetToken","refreshTokenWithState","Error","scopeTokenWithState","scopeToken","deleteTokenWithState","deleteToken","authUnauthenticated","createUnauthenticatedAuth","reason","deleteAuthorizationWithState","deleteAuthorization","handleRequest","app","_ref","pathPrefix","method","status","headers","pathname","URL","url","route","join","routes","getLogin","getCallback","createToken","getToken","patchToken","patchRefreshToken","deleteGrant","values","includes","json","text","JSON","parse","error","stringify","searchParams","query","fromEntries","_headers$authorizatio6","split","location","error_description","code","_headers$authorizatio","authorization","substr","length","_headers$authorizatio2","_headers$authorizatio3","_headers$authorizatio4","_headers$authorizatio5","message","parseRequest","Promise","resolve","reject","bodyChunks","on","chunk","Buffer","concat","toString","sendResponse","octokitResponse","writeHead","end","onUnhandledRequestDefault","onUnhandledRequestDefaultNode","octokitRequest","createNodeMiddleware","onUnhandledRequest","arguments","log","warn","next","parseRequest$1","entries","sendResponse$1","Response","onUnhandledRequestDefaultWebWorker","createWebWorkerHandler","createCloudflareHandler","_len","args","_key","parseRequest$2","requestContext","http","rawPath","stage","startsWith","substring","rawQueryString","body","sendResponse$2","statusCode","onUnhandledRequestDefaultAWSAPIGatewayV2","event","createAWSLambdaAPIGatewayV2Handler","OAuthApp","OAuthAppWithDefaults","constructor","createOAuthAppAuth","baseUrl","bind","getUserOctokit"],"sources":["/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/version.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/add-event-handler.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/oauth-app-octokit.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/emit-event.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/get-user-octokit.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/get-web-flow-authorization-url.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/create-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/check-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/reset-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/refresh-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/scope-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/delete-token.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/methods/delete-authorization.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/handle-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/node/parse-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/node/send-response.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/on-unhandled-request-default.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/node/index.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/parse-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/send-response.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/web-worker/index.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-parse-request.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2-send-response.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/middleware/aws-lambda/api-gateway-v2.js","/home/lenovo/Documents/personal/redux_cart/gihub-repo/node_modules/@octokit/oauth-app/dist-src/index.js"],"sourcesContent":["export const VERSION = \"4.2.0\";\n","export function addEventHandler(state, eventName, eventHandler) {\n    if (Array.isArray(eventName)) {\n        for (const singleEventName of eventName) {\n            addEventHandler(state, singleEventName, eventHandler);\n        }\n        return;\n    }\n    if (!state.eventHandlers[eventName]) {\n        state.eventHandlers[eventName] = [];\n    }\n    state.eventHandlers[eventName].push(eventHandler);\n}\n","import { Octokit } from \"@octokit/core\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nexport const OAuthAppOctokit = Octokit.defaults({\n    userAgent: `octokit-oauth-app.js/${VERSION} ${getUserAgent()}`,\n});\n","export async function emitEvent(state, context) {\n    const { name, action } = context;\n    if (state.eventHandlers[`${name}.${action}`]) {\n        for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {\n            await eventHandler(context);\n        }\n    }\n    if (state.eventHandlers[name]) {\n        for (const eventHandler of state.eventHandlers[name]) {\n            await eventHandler(context);\n        }\n    }\n}\n","import { createOAuthUserAuth, } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function getUserOctokitWithState(state, options) {\n    return state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n        async factory(options) {\n            const octokit = new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: options,\n            });\n            const authentication = (await octokit.auth({\n                type: \"get\",\n            }));\n            await emitEvent(state, {\n                name: \"token\",\n                action: \"created\",\n                token: authentication.token,\n                scopes: authentication.scopes,\n                authentication,\n                octokit,\n            });\n            return octokit;\n        },\n    });\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport function getWebFlowAuthorizationUrlWithState(state, options) {\n    let allowSignup;\n    if (options.allowSignup === undefined && state.allowSignup === undefined) {\n        allowSignup = true;\n    }\n    else if (options.allowSignup === undefined &&\n        state.allowSignup !== undefined) {\n        allowSignup = state.allowSignup;\n    }\n    else if (state.allowSignup === undefined &&\n        options.allowSignup !== undefined) {\n        allowSignup = options.allowSignup;\n    }\n    else {\n        allowSignup = options.allowSignup || state.allowSignup;\n    }\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        request: state.octokit.request,\n        ...options,\n        allowSignup,\n        redirectUrl: options.redirectUrl || state.redirectUrl,\n        scopes: options.scopes || state.defaultScopes,\n    };\n    return OAuthMethods.getWebFlowAuthorizationUrl({\n        clientType: state.clientType,\n        ...optionsWithDefaults,\n    });\n}\n","import * as OAuthAppAuth from \"@octokit/auth-oauth-app\";\nimport { emitEvent } from \"../emit-event\";\nexport async function createTokenWithState(state, options) {\n    const authentication = await state.octokit.auth({\n        type: \"oauth-user\",\n        ...options,\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"created\",\n        token: authentication.token,\n        scopes: authentication.scopes,\n        authentication,\n        octokit: new state.Octokit({\n            authStrategy: OAuthAppAuth.createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: authentication.token,\n                scopes: authentication.scopes,\n                refreshToken: authentication.refreshToken,\n                expiresAt: authentication.expiresAt,\n                refreshTokenExpiresAt: authentication.refreshTokenExpiresAt,\n            },\n        }),\n    });\n    return { authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nexport async function checkTokenWithState(state, options) {\n    const result = await OAuthMethods.checkToken({\n        // @ts-expect-error not worth the extra code to appease TS\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    Object.assign(result.authentication, { type: \"token\", tokenType: \"oauth\" });\n    return result;\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function resetTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    if (state.clientType === \"oauth-app\") {\n        const response = await OAuthMethods.resetToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        });\n        const authentication = Object.assign(response.authentication, {\n            type: \"token\",\n            tokenType: \"oauth\",\n        });\n        await emitEvent(state, {\n            name: \"token\",\n            action: \"reset\",\n            token: response.authentication.token,\n            scopes: response.authentication.scopes || undefined,\n            authentication: authentication,\n            octokit: new state.Octokit({\n                authStrategy: createOAuthUserAuth,\n                auth: {\n                    clientType: state.clientType,\n                    clientId: state.clientId,\n                    clientSecret: state.clientSecret,\n                    token: response.authentication.token,\n                    scopes: response.authentication.scopes,\n                },\n            }),\n        });\n        return { ...response, authentication };\n    }\n    const response = await OAuthMethods.resetToken({\n        clientType: \"github-app\",\n        ...optionsWithDefaults,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"reset\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { emitEvent } from \"../emit-event\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function refreshTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.refreshToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        refreshToken: options.refreshToken,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"refreshed\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nimport { emitEvent } from \"../emit-event\";\nexport async function scopeTokenWithState(state, options) {\n    if (state.clientType === \"oauth-app\") {\n        throw new Error(\"[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps\");\n    }\n    const response = await OAuthMethods.scopeToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    });\n    const authentication = Object.assign(response.authentication, {\n        type: \"token\",\n        tokenType: \"oauth\",\n    });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"scoped\",\n        token: response.authentication.token,\n        authentication: authentication,\n        octokit: new state.Octokit({\n            authStrategy: createOAuthUserAuth,\n            auth: {\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: response.authentication.token,\n            },\n        }),\n    });\n    return { ...response, authentication };\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteTokenWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteToken({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteToken({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n","import * as OAuthMethods from \"@octokit/oauth-methods\";\nimport { createUnauthenticatedAuth } from \"@octokit/auth-unauthenticated\";\nimport { emitEvent } from \"../emit-event\";\nexport async function deleteAuthorizationWithState(state, options) {\n    const optionsWithDefaults = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.octokit.request,\n        ...options,\n    };\n    const response = state.clientType === \"oauth-app\"\n        ? await OAuthMethods.deleteAuthorization({\n            clientType: \"oauth-app\",\n            ...optionsWithDefaults,\n        })\n        : // istanbul ignore next\n            await OAuthMethods.deleteAuthorization({\n                clientType: \"github-app\",\n                ...optionsWithDefaults,\n            });\n    await emitEvent(state, {\n        name: \"token\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"token.deleted\" event. The access for the token has been revoked.`,\n            },\n        }),\n    });\n    await emitEvent(state, {\n        name: \"authorization\",\n        action: \"deleted\",\n        token: options.token,\n        octokit: new state.Octokit({\n            authStrategy: createUnauthenticatedAuth,\n            auth: {\n                reason: `Handling \"authorization.deleted\" event. The access for the app has been revoked.`,\n            },\n        }),\n    });\n    return response;\n}\n","// @ts-ignore - requires esModuleInterop flag\nimport fromEntries from \"fromentries\";\nexport async function handleRequest(app, { pathPrefix = \"/api/github/oauth\" }, request) {\n    if (request.method === \"OPTIONS\") {\n        return {\n            status: 200,\n            headers: {\n                \"access-control-allow-origin\": \"*\",\n                \"access-control-allow-methods\": \"*\",\n                \"access-control-allow-headers\": \"Content-Type, User-Agent, Authorization\",\n            },\n        };\n    }\n    // request.url may include ?query parameters which we don't want for `route`\n    // hence the workaround using new URL()\n    const { pathname } = new URL(request.url, \"http://localhost\");\n    const route = [request.method, pathname].join(\" \");\n    const routes = {\n        getLogin: `GET ${pathPrefix}/login`,\n        getCallback: `GET ${pathPrefix}/callback`,\n        createToken: `POST ${pathPrefix}/token`,\n        getToken: `GET ${pathPrefix}/token`,\n        patchToken: `PATCH ${pathPrefix}/token`,\n        patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,\n        scopeToken: `POST ${pathPrefix}/token/scoped`,\n        deleteToken: `DELETE ${pathPrefix}/token`,\n        deleteGrant: `DELETE ${pathPrefix}/grant`,\n    };\n    // handle unknown routes\n    if (!Object.values(routes).includes(route)) {\n        return null;\n    }\n    let json;\n    try {\n        const text = await request.text();\n        json = text ? JSON.parse(text) : {};\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({\n                error: \"[@octokit/oauth-app] request error\",\n            }),\n        };\n    }\n    const { searchParams } = new URL(request.url, \"http://localhost\");\n    const query = fromEntries(searchParams);\n    const headers = request.headers;\n    try {\n        if (route === routes.getLogin) {\n            const { url } = app.getWebFlowAuthorizationUrl({\n                state: query.state,\n                scopes: query.scopes ? query.scopes.split(\",\") : undefined,\n                allowSignup: query.allowSignup\n                    ? query.allowSignup === \"true\"\n                    : undefined,\n                redirectUrl: query.redirectUrl,\n            });\n            return { status: 302, headers: { location: url } };\n        }\n        if (route === routes.getCallback) {\n            if (query.error) {\n                throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);\n            }\n            if (!query.code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const { authentication: { token }, } = await app.createToken({\n                code: query.code,\n            });\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"text/html\",\n                },\n                text: `<h1>Token created successfully</h1>\n    \n<p>Your token is: <strong>${token}</strong>. Copy it now as it cannot be shown again.</p>`,\n            };\n        }\n        if (route === routes.createToken) {\n            const { code, redirectUrl } = json;\n            if (!code) {\n                throw new Error('[@octokit/oauth-app] \"code\" parameter is required');\n            }\n            const result = await app.createToken({\n                code,\n                redirectUrl,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 201,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.getToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.checkToken({\n                token,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.resetToken({ token });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.patchRefreshToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const { refreshToken } = json;\n            if (!refreshToken) {\n                throw new Error(\"[@octokit/oauth-app] refreshToken must be sent in request body\");\n            }\n            const result = await app.refreshToken({ refreshToken });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.scopeToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            const result = await app.scopeToken({\n                token,\n                ...json,\n            });\n            // @ts-ignore\n            delete result.authentication.clientSecret;\n            return {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"access-control-allow-origin\": \"*\",\n                },\n                text: JSON.stringify(result),\n            };\n        }\n        if (route === routes.deleteToken) {\n            const token = headers.authorization?.substr(\"token \".length);\n            if (!token) {\n                throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n            }\n            await app.deleteToken({\n                token,\n            });\n            return {\n                status: 204,\n                headers: { \"access-control-allow-origin\": \"*\" },\n            };\n        }\n        // route === routes.deleteGrant\n        const token = headers.authorization?.substr(\"token \".length);\n        if (!token) {\n            throw new Error('[@octokit/oauth-app] \"Authorization\" header is required');\n        }\n        await app.deleteAuthorization({\n            token,\n        });\n        return {\n            status: 204,\n            headers: { \"access-control-allow-origin\": \"*\" },\n        };\n    }\n    catch (error) {\n        return {\n            status: 400,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"access-control-allow-origin\": \"*\",\n            },\n            text: JSON.stringify({ error: error.message }),\n        };\n    }\n}\n","export function parseRequest(request) {\n    const { method, url, headers } = request;\n    async function text() {\n        const text = await new Promise((resolve, reject) => {\n            let bodyChunks = [];\n            request\n                .on(\"error\", reject)\n                .on(\"data\", (chunk) => bodyChunks.push(chunk))\n                .on(\"end\", () => resolve(Buffer.concat(bodyChunks).toString()));\n        });\n        return text;\n    }\n    return { method, url, headers, text };\n}\n","export function sendResponse(octokitResponse, response) {\n    response.writeHead(octokitResponse.status, octokitResponse.headers);\n    response.end(octokitResponse.text);\n}\n","export function onUnhandledRequestDefault(request) {\n    return {\n        status: 404,\n        headers: { \"content-type\": \"application/json\" },\n        text: JSON.stringify({\n            error: `Unknown route: ${request.method} ${request.url}`,\n        }),\n    };\n}\n","import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nimport { handleRequest } from \"../handle-request\";\nfunction onUnhandledRequestDefaultNode(request, response) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    sendResponse(octokitResponse, response);\n}\nexport function createNodeMiddleware(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultNode);\n    return async function (request, response, next) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        if (octokitResponse) {\n            sendResponse(octokitResponse, response);\n        }\n        else if (typeof next === \"function\") {\n            next();\n        }\n        else {\n            onUnhandledRequest(request, response);\n        }\n    };\n}\n","export function parseRequest(request) {\n    // @ts-ignore Worker environment supports fromEntries/entries.\n    const headers = Object.fromEntries(request.headers.entries());\n    return {\n        method: request.method,\n        url: request.url,\n        headers,\n        text: () => request.text(),\n    };\n}\n","export function sendResponse(octokitResponse) {\n    return new Response(octokitResponse.text, {\n        status: octokitResponse.status,\n        headers: octokitResponse.headers,\n    });\n}\n","import { parseRequest } from \"./parse-request\";\nimport { sendResponse } from \"./send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultWebWorker(request) {\n    const octokitRequest = parseRequest(request);\n    const octokitResponse = onUnhandledRequestDefault(octokitRequest);\n    return sendResponse(octokitResponse);\n}\nexport function createWebWorkerHandler(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultWebWorker);\n    return async function (request) {\n        const octokitRequest = parseRequest(request);\n        const octokitResponse = await handleRequest(app, { pathPrefix }, octokitRequest);\n        return octokitResponse\n            ? sendResponse(octokitResponse)\n            : await onUnhandledRequest(request);\n    };\n}\n/** @deprecated */\nexport function createCloudflareHandler(...args) {\n    args[0].octokit.log.warn(\"[@octokit/oauth-app] `createCloudflareHandler` is deprecated, use `createWebWorkerHandler` instead\");\n    return createWebWorkerHandler(...args);\n}\n","export function parseRequest(request) {\n    const { method } = request.requestContext.http;\n    let url = request.rawPath;\n    const { stage } = request.requestContext;\n    if (url.startsWith(\"/\" + stage))\n        url = url.substring(stage.length + 1);\n    if (request.rawQueryString)\n        url += \"?\" + request.rawQueryString;\n    const headers = request.headers;\n    const text = async () => request.body || \"\";\n    return { method, url, headers, text };\n}\n","export function sendResponse(octokitResponse) {\n    return {\n        statusCode: octokitResponse.status,\n        headers: octokitResponse.headers,\n        body: octokitResponse.text,\n    };\n}\n","import { parseRequest } from \"./api-gateway-v2-parse-request\";\nimport { sendResponse } from \"./api-gateway-v2-send-response\";\nimport { handleRequest } from \"../handle-request\";\nimport { onUnhandledRequestDefault } from \"../on-unhandled-request-default\";\nasync function onUnhandledRequestDefaultAWSAPIGatewayV2(event) {\n    const request = parseRequest(event);\n    const response = onUnhandledRequestDefault(request);\n    return sendResponse(response);\n}\nexport function createAWSLambdaAPIGatewayV2Handler(app, { pathPrefix, onUnhandledRequest, } = {}) {\n    if (onUnhandledRequest) {\n        app.octokit.log.warn(\"[@octokit/oauth-app] `onUnhandledRequest` is deprecated and will be removed from the next major version.\");\n    }\n    onUnhandledRequest ?? (onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2);\n    return async function (event) {\n        const request = parseRequest(event);\n        const response = await handleRequest(app, { pathPrefix }, request);\n        return response ? sendResponse(response) : onUnhandledRequest(event);\n    };\n}\n","import { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { VERSION } from \"./version\";\nimport { addEventHandler } from \"./add-event-handler\";\nimport { OAuthAppOctokit } from \"./oauth-app-octokit\";\nimport { getUserOctokitWithState, } from \"./methods/get-user-octokit\";\nimport { getWebFlowAuthorizationUrlWithState, } from \"./methods/get-web-flow-authorization-url\";\nimport { createTokenWithState, } from \"./methods/create-token\";\nimport { checkTokenWithState, } from \"./methods/check-token\";\nimport { resetTokenWithState, } from \"./methods/reset-token\";\nimport { refreshTokenWithState, } from \"./methods/refresh-token\";\nimport { scopeTokenWithState, } from \"./methods/scope-token\";\nimport { deleteTokenWithState, } from \"./methods/delete-token\";\nimport { deleteAuthorizationWithState, } from \"./methods/delete-authorization\";\n// generic handlers\nexport { handleRequest } from \"./middleware/handle-request\";\nexport { createNodeMiddleware } from \"./middleware/node/index\";\nexport { createCloudflareHandler, createWebWorkerHandler, } from \"./middleware/web-worker/index\";\nexport { createAWSLambdaAPIGatewayV2Handler } from \"./middleware/aws-lambda/api-gateway-v2\";\nexport class OAuthApp {\n    static defaults(defaults) {\n        const OAuthAppWithDefaults = class extends this {\n            constructor(...args) {\n                super({\n                    ...defaults,\n                    ...args[0],\n                });\n            }\n        };\n        return OAuthAppWithDefaults;\n    }\n    constructor(options) {\n        const Octokit = options.Octokit || OAuthAppOctokit;\n        this.type = (options.clientType ||\n            \"oauth-app\");\n        const octokit = new Octokit({\n            authStrategy: createOAuthAppAuth,\n            auth: {\n                clientType: this.type,\n                clientId: options.clientId,\n                clientSecret: options.clientSecret,\n            },\n        });\n        const state = {\n            clientType: this.type,\n            clientId: options.clientId,\n            clientSecret: options.clientSecret,\n            // @ts-expect-error defaultScopes not permitted for GitHub Apps\n            defaultScopes: options.defaultScopes || [],\n            allowSignup: options.allowSignup,\n            baseUrl: options.baseUrl,\n            redirectUrl: options.redirectUrl,\n            log: options.log,\n            Octokit,\n            octokit,\n            eventHandlers: {},\n        };\n        this.on = addEventHandler.bind(null, state);\n        // @ts-expect-error TODO: figure this out\n        this.octokit = octokit;\n        this.getUserOctokit = getUserOctokitWithState.bind(null, state);\n        this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);\n        this.createToken = createTokenWithState.bind(null, state);\n        this.checkToken = checkTokenWithState.bind(null, state);\n        this.resetToken = resetTokenWithState.bind(null, state);\n        this.refreshToken = refreshTokenWithState.bind(null, state);\n        this.scopeToken = scopeTokenWithState.bind(null, state);\n        this.deleteToken = deleteTokenWithState.bind(null, state);\n        this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);\n    }\n}\nOAuthApp.VERSION = VERSION;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}