{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Documents/personal/redux_cart/public-repo-search/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { Octokit } from 'octokit';\nimport RepoCard from './components/RepoCard';\nimport Loading from './components/Loading';\nimport Blank from './components/Blank';\nimport Search from './components/Search';\nimport Sort from './components/Sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const octokit = new Octokit({});\n  const [query, setQuery] = useState('');\n  const [sortText, setSortText] = useState('');\n  const [repoList, setRepoList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  //Fetching the Github repo data\n  const fetchData = () => {\n    return new Promise(async (resolve, reject) => {\n      setLoading(true);\n      let res = await octokit.request('GET /search/repositories', {\n        q: query,\n        sort: sortText,\n        per_page: 12\n      });\n      if (res) {\n        var _res$data;\n        setRepoList((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.items);\n        setLoading(false);\n        resolve(true);\n      } else {\n        setLoading(false);\n        reject(false);\n      }\n      ;\n    });\n  };\n  //Handling the Search bar texts\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n  //Handling the Sort options\n  const handleSortTextChange = e => {\n    setSortText(e.target.value);\n  };\n  //Reacting to search bar query changes\n  useEffect(() => {\n    let timer;\n    if (query) {\n      setLoading(true);\n      timer = setTimeout(async () => {\n        fetchData();\n      }, 2000);\n    }\n    return () => clearTimeout(timer);\n  }, [query]);\n  //Reacting to sort options\n  useEffect(() => {\n    if (query && sortText) {\n      setLoading(true);\n      fetchData();\n    }\n  }, [sortText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Github Repository Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      query: query,\n      handleChange: handleQueryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Sort, {\n        sortText: sortText,\n        handleChange: handleSortTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : repoList.length === 0 ? /*#__PURE__*/_jsxDEV(Blank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: repoList && repoList.length > 0 && repoList.map(item => /*#__PURE__*/_jsxDEV(RepoCard, {\n        repo: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2QEmMaGH2BdA2UQ9qZAv/ZvakZc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Octokit","RepoCard","Loading","Blank","Search","Sort","jsxDEV","_jsxDEV","App","_s","octokit","query","setQuery","sortText","setSortText","repoList","setRepoList","loading","setLoading","fetchData","Promise","resolve","reject","res","request","q","sort","per_page","_res$data","data","items","handleQueryChange","e","target","value","handleSortTextChange","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","length","map","item","repo","id","_c","$RefreshReg$"],"sources":["/home/lenovo/Documents/personal/redux_cart/public-repo-search/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport { Octokit } from 'octokit'\nimport RepoCard from './components/RepoCard';\nimport Loading from './components/Loading';\nimport Blank from './components/Blank';\nimport Search from './components/Search';\nimport Sort from './components/Sort';\n\nfunction App() {\n  const octokit = new Octokit({});\n  const [query, setQuery] = useState('');\n  const [sortText, setSortText] = useState('');\n  const [repoList, setRepoList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n\n//Fetching the Github repo data\n  const fetchData = () => {\n    return new Promise(async (resolve, reject) => {\n      setLoading(true);\n      let res = await octokit.request('GET /search/repositories', {\n        q: query,\n        sort: sortText,\n        per_page: 12\n      })\n      if (res) {\n        setRepoList(res.data?.items);\n        setLoading(false);\n        resolve(true);\n      }\n      else {\n        setLoading(false);\n        reject(false)\n      };\n    })\n  }\n//Handling the Search bar texts\n  const handleQueryChange = e => {\n    setQuery(e.target.value)\n  }\n//Handling the Sort options\n  const handleSortTextChange = e => {\n    setSortText(e.target.value)\n  }\n//Reacting to search bar query changes\n  useEffect(() => {\n    let timer;\n    if (query) {\n      setLoading(true);\n      timer = setTimeout(async () => {\n        fetchData();\n      }, 2000)\n    }\n    return () => clearTimeout(timer)\n  }, [query])\n//Reacting to sort options\n  useEffect(() => {\n    if (query && sortText) {\n      setLoading(true);\n      fetchData();\n    }\n  }, [sortText])\n\n  return (\n    <div className=\"App\">\n      <h1>Github Repository Search</h1>\n      <Search query={query} handleChange={handleQueryChange} />\n      <div >\n        <Sort sortText={sortText} handleChange={handleSortTextChange} />\n      </div>\n      {loading ?\n        <Loading /> :\n        repoList.length === 0 ?\n          <Blank /> :\n          (<section className='cards'>\n            {repoList && repoList.length > 0 && repoList.map((item) => (\n              <RepoCard key={item.id} repo={item} />\n            ))}\n          </section>)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}